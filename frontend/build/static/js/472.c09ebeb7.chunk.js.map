{"version":3,"file":"static/js/472.c09ebeb7.chunk.js","mappings":"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","sources":["components/SubscribeButton.js","components/SubscriptionPage.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport apiClient from \"../services/api\";\nimport { toast } from 'react-toastify';\n\nfunction SubscribeButton({ planType, children }) {\n  const paypalButtonRef = useRef();\n\n  const handleMercadoPagoSubscribe = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        toast.error(\"Debes iniciar sesión para suscribirte.\");\n        return;\n      }\n\n      const response = await apiClient.post(\"/payments/create-preference-mp\", {\n        planType,\n      });\n      window.open(response.data.init_point, \"_blank\");\n    } catch (error) {\n      console.error(\"Error al suscribirse con Mercado Pago:\", error);\n      toast.error(\n        error.response?.data?.message ||\n          \"Hubo un error al procesar la suscripción con Mercado Pago.\"\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (\n      window.paypal &&\n      paypalButtonRef.current &&\n      paypalButtonRef.current.children.length === 0\n    ) {\n      window.paypal\n        .Buttons({\n          createOrder: async (data, actions) => {\n            try {\n              const response = await apiClient.post(\n                \"/payments/create-paypal-order\",\n                { planType }\n              );\n              return response.data.orderID;\n            } catch (error) {\n              console.error(\"Error al crear la orden de PayPal:\", error);\n              toast.error(\"Hubo un error al crear la orden de PayPal.\");\n              return null;\n            }\n          },\n          onApprove: async (data, actions) => {\n            try {\n              const response = await apiClient.post(\n                \"/payments/capture-paypal-order\",\n                { orderID: data.orderID, planType }\n              );\n              if (response.data.success) {\n                toast.success(\"¡Pago de PayPal exitoso!\");\n                window.location.href = \"/pago-exitoso-paypal\";\n              } else {\n                toast.error(\"El pago de PayPal no se completó.\");\n                window.location.href = \"/pago-cancelado-paypal\";\n              }\n            } catch (error) {\n              console.error(\"Error al capturar el pago de PayPal:\", error);\n              toast.error(\"Hubo un error al capturar el pago de PayPal.\");\n              window.location.href = \"/pago-cancelado-paypal\";\n            }\n          },\n          onError: (err) => {\n            console.error(\"Error en el botón de PayPal:\", err);\n            toast.error(\n              \"Ocurrió un error con PayPal. Por favor, inténtalo de nuevo.\"\n            );\n          },\n        })\n        .render(paypalButtonRef.current);\n    }\n  }, [planType]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"10px\",\n        alignItems: \"center\",\n      }}\n    >\n      <button\n        className=\"subscribe-button\"\n        onClick={handleMercadoPagoSubscribe}\n        style={{ width: \"200px\", height: \"35px\" }}\n      >\n        {children} Mercado Pago\n      </button>\n      <div ref={paypalButtonRef}></div>\n    </div>\n  );\n}\n\nexport default SubscribeButton;\n","import React from \"react\";\nimport SubscribeButton from \"./SubscribeButton\";\nimport { useTranslation } from \"react-i18next\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\n\nfunction SubscriptionPage() {\n  const { t } = useTranslation();\n\n  return (\n    <Stack\n      className=\"subscription-container\"\n      spacing={4}\n      sx={{ mt: 5, alignItems: \"center\" }}\n    >\n      <Typography variant=\"h4\">{t(\"subscription_plans_title\")}</Typography>\n      <Typography>{t(\"subscription_plans_subtitle\")}</Typography>\n      <Stack\n        direction={{ xs: \"column\", md: \"row\" }}\n        spacing={4}\n        className=\"plans\"\n      >\n        <Card className=\"plan\" sx={{ minWidth: 300 }}>\n          <CardContent>\n            <Typography variant=\"h6\">{t(\"offerer_plan_title\")}</Typography>\n            <Typography>{t(\"offerer_plan_description\")}</Typography>\n            <SubscribeButton planType=\"ofertante\"></SubscribeButton>\n          </CardContent>\n        </Card>\n        <Card className=\"plan\" sx={{ minWidth: 300 }}>\n          <CardContent>\n            <Typography variant=\"h6\">{t(\"applicant_plan_title\")}</Typography>\n            <Typography>{t(\"applicant_plan_description\")}</Typography>\n            <SubscribeButton planType=\"postulante\"></SubscribeButton>\n          </CardContent>\n        </Card>\n      </Stack>\n    </Stack>\n  );\n}\n\nexport default SubscriptionPage;\n"],"names":["_ref","planType","children","paypalButtonRef","useRef","useEffect","window","paypal","current","length","Buttons","createOrder","async","data","actions","apiClient","post","orderID","error","console","toast","onApprove","success","location","href","onError","err","render","_jsxs","style","display","flexDirection","gap","alignItems","className","onClick","localStorage","getItem","response","open","init_point","_error$response","_error$response$data","message","width","height","_jsx","ref","t","useTranslation","Stack","spacing","sx","mt","Typography","variant","direction","xs","md","Card","minWidth","CardContent","SubscribeButton"],"sourceRoot":""}