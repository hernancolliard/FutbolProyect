{"version":3,"file":"static/js/60.4a30ea51.chunk.js","mappings":"+LAgFA,QA3EA,WACE,MAAM,EAAEA,IAAMC,EAAAA,EAAAA,OACPC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,KAChDG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,KAChCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,KAC5BO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAChCS,IAAgBC,EAAAA,EAAAA,MACjBC,GAAWC,EAAAA,EAAAA,MACXC,EAAQJ,EAAaK,IAAI,SA4B/B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAiBC,MAAO,CAAEC,UAAW,QAASC,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,MAAAD,SAAKvB,EAAE,0BACLiB,GAGAE,EAAAA,EAAAA,MAAA,QAAMM,SAhCSC,UAEnB,GADAC,EAAEC,iBACE1B,IAAaG,EAIjB,GAAKY,EAAL,CAIAL,GAAW,GACXF,EAAS,IACTF,EAAW,IACX,IACE,MAAMqB,QAAiBC,EAAAA,EAAUC,KAAK,wBAAyB,CAAEd,QAAOf,aACxEM,EAAWqB,EAASG,KAAKzB,SACzB0B,WAAW,KACTlB,EAAS,WACR,IACL,CAAE,MAAOmB,GAAM,IAADC,EAAAC,EACZ1B,GAAqB,QAAZyB,EAAAD,EAAIL,gBAAQ,IAAAM,GAAM,QAANC,EAAZD,EAAcH,YAAI,IAAAI,OAAN,EAAZA,EAAoB7B,UAAWP,EAAE,iBAC5C,CAAC,QACCY,GAAW,EACb,CAdA,MAFEF,EAASV,EAAE,uBAJXU,EAASV,EAAE,4BA6BoBuB,SAAA,EAC3BJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYG,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,WAAUd,SAAEvB,EAAE,yBAC7BwB,EAAAA,EAAAA,KAAA,SACEc,KAAK,WACLC,GAAG,WACHC,MAAOtC,EACPuC,SAAWd,GAAMxB,EAAYwB,EAAEe,OAAOF,OACtCG,UAAQ,QAGZxB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYG,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,kBAAiBd,SAAEvB,EAAE,iCACpCwB,EAAAA,EAAAA,KAAA,SACEc,KAAK,WACLC,GAAG,kBACHC,MAAOnC,EACPoC,SAAWd,GAAMrB,EAAmBqB,EAAEe,OAAOF,OAC7CG,UAAQ,OAGXpC,IAAWiB,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,kBAAiBG,SAAEhB,IAC3CE,IAASe,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,gBAAeG,SAAEd,KACxCe,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAASlB,UAAU,WAAWwB,SAAUjC,EAAQY,SAChDvB,EAAVW,EAAY,oBAAyB,gCA1B1Ca,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,gBAAeG,SAAEvB,EAAE,gCAgCxC,C","sources":["components/ResetPasswordPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport apiClient from '../services/api';\nimport { useTranslation } from 'react-i18next';\n\nfunction ResetPasswordPage() {\n  const { t } = useTranslation();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const token = searchParams.get('token');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError(t('passwords_do_not_match'));\n      return;\n    }\n    if (!token) {\n      setError(t('invalid_token'));\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setMessage('');\n    try {\n      const response = await apiClient.post('/users/reset-password', { token, password });\n      setMessage(response.data.message);\n      setTimeout(() => {\n        navigate('/login');\n      }, 3000); // Redirect to login after 3 seconds\n    } catch (err) {\n      setError(err.response?.data?.message || t('error_generic'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"form-container\" style={{ marginTop: '40px' }}>\n      <h2>{t('reset_password_title')}</h2>\n      {!token ? (\n        <p className=\"error-message\">{t('invalid_token_or_expired')}</p>\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">{t('new_password_label')}</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">{t('confirm_new_password_label')}</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n            />\n          </div>\n          {message && <p className=\"success-message\">{message}</p>}\n          {error && <p className=\"error-message\">{error}</p>}\n          <button type=\"submit\" className=\"btn-main\" disabled={loading}>\n            {loading ? t('updating_password') : t('update_password_button')}\n          </button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default ResetPasswordPage;\n"],"names":["t","useTranslation","password","setPassword","useState","confirmPassword","setConfirmPassword","message","setMessage","error","setError","loading","setLoading","searchParams","useSearchParams","navigate","useNavigate","token","get","_jsxs","className","style","marginTop","children","_jsx","onSubmit","async","e","preventDefault","response","apiClient","post","data","setTimeout","err","_err$response","_err$response$data","htmlFor","type","id","value","onChange","target","required","disabled"],"sourceRoot":""}