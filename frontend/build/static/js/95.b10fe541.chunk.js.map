{"version":3,"file":"static/js/95.b10fe541.chunk.js","mappings":"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","sources":["components/UserManagement.js","components/OfferManagement.js","components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport apiClient from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Button from \"@mui/material/Button\";\n\nfunction UserManagement() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchUsers = async () => {\n    setLoading(true);\n    try {\n      const response = await apiClient.get(\"/admin/users\");\n      setUsers(response.data);\n    } catch (error) {\n      toast.error(\"Failed to fetch users.\");\n      console.error(\"Error fetching users:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const handleDelete = async (userId) => {\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\n      try {\n        await apiClient.delete(`/admin/users/${userId}`);\n        toast.success(\"User deleted successfully.\");\n        fetchUsers(); // Refresh the list\n      } catch (error) {\n        toast.error(error.response?.data?.message || \"Failed to delete user.\");\n        console.error(\"Error deleting user:\", error);\n      }\n    }\n  };\n\n  if (loading) {\n    return (\n      <Typography align=\"center\" sx={{ mt: 4 }}>\n        <CircularProgress sx={{ mr: 2 }} />\n        Loading users...\n      </Typography>\n    );\n  }\n\n  return (\n    <TableContainer component={Paper} sx={{ mt: 4 }}>\n      <Typography variant=\"h5\" sx={{ m: 2 }}>\n        Users\n      </Typography>\n      <Table className=\"management-table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>User Type</TableCell>\n            <TableCell>Is Admin</TableCell>\n            <TableCell>Created At</TableCell>\n            <TableCell>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {users.map((user) => (\n            <TableRow key={user.id}>\n              <TableCell>{user.id}</TableCell>\n              <TableCell>{user.nombre}</TableCell>\n              <TableCell>{user.email}</TableCell>\n              <TableCell>{user.tipo_usuario}</TableCell>\n              <TableCell>{user.isAdmin ? \"Yes\" : \"No\"}</TableCell>\n              <TableCell>\n                {new Date(user.fecha_creacion).toLocaleDateString()}\n              </TableCell>\n              <TableCell>\n                <Button\n                  onClick={() => handleDelete(user.id)}\n                  variant=\"outlined\"\n                  color=\"error\"\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default UserManagement;\n","import React, { useState, useEffect } from \"react\";\nimport apiClient from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Button from \"@mui/material/Button\";\n\nfunction OfferManagement() {\n  const [offers, setOffers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchOffers = async () => {\n    setLoading(true);\n    try {\n      const response = await apiClient.get(\"/admin/offers\");\n      setOffers(response.data);\n    } catch (error) {\n      toast.error(\"Failed to fetch offers.\");\n      console.error(\"Error fetching offers:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchOffers();\n  }, []);\n\n  const handleDelete = async (offerId) => {\n    if (window.confirm(\"Are you sure you want to delete this offer?\")) {\n      try {\n        await apiClient.delete(`/admin/offers/${offerId}`);\n        toast.success(\"Offer deleted successfully.\");\n        fetchOffers(); // Refresh the list\n      } catch (error) {\n        toast.error(error.response?.data?.message || \"Failed to delete offer.\");\n        console.error(\"Error deleting offer:\", error);\n      }\n    }\n  };\n\n  if (loading) {\n    return (\n      <Typography align=\"center\" sx={{ mt: 4 }}>\n        <CircularProgress sx={{ mr: 2 }} />\n        Loading offers...\n      </Typography>\n    );\n  }\n\n  return (\n    <TableContainer component={Paper} sx={{ mt: 4 }}>\n      <Typography variant=\"h5\" sx={{ m: 2 }}>\n        Offers\n      </Typography>\n      <Table className=\"management-table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>Title</TableCell>\n            <TableCell>Offerer</TableCell>\n            <TableCell>Location</TableCell>\n            <TableCell>Position</TableCell>\n            <TableCell>Published Date</TableCell>\n            <TableCell>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {offers.map((offer) => (\n            <TableRow key={offer.id}>\n              <TableCell>{offer.id}</TableCell>\n              <TableCell>{offer.titulo}</TableCell>\n              <TableCell>{offer.nombre_ofertante}</TableCell>\n              <TableCell>{offer.ubicacion}</TableCell>\n              <TableCell>{offer.puesto}</TableCell>\n              <TableCell>\n                {new Date(offer.fecha_publicacion).toLocaleDateString()}\n              </TableCell>\n              <TableCell>\n                <Button\n                  onClick={() => handleDelete(offer.id)}\n                  variant=\"outlined\"\n                  color=\"error\"\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default OfferManagement;\n","import React, { useState } from \"react\";\nimport UserManagement from \"./UserManagement\";\nimport OfferManagement from \"./OfferManagement\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nfunction AdminDashboard() {\n  const [activeTab, setActiveTab] = useState(\"users\");\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  return (\n    <Box className=\"admin-dashboard\" sx={{ mt: 4 }}>\n      <Typography variant=\"h4\" sx={{ mb: 2 }}>\n        Admin Dashboard\n      </Typography>\n      <Tabs\n        value={activeTab}\n        onChange={handleTabChange}\n        aria-label=\"admin tabs\"\n      >\n        <Tab label=\"User Management\" value=\"users\" />\n        <Tab label=\"Offer Management\" value=\"offers\" />\n      </Tabs>\n      <Box className=\"admin-content\" sx={{ mt: 3 }}>\n        {activeTab === \"users\" && <UserManagement />}\n        {activeTab === \"offers\" && <OfferManagement />}\n      </Box>\n    </Box>\n  );\n}\n\nexport default AdminDashboard;\n"],"names":["users","setUsers","useState","loading","setLoading","fetchUsers","async","response","apiClient","get","data","error","toast","console","useEffect","_jsxs","Typography","align","sx","mt","children","_jsx","CircularProgress","mr","TableContainer","component","Paper","variant","m","Table","className","TableHead","TableRow","TableCell","TableBody","map","user","id","nombre","email","tipo_usuario","isAdmin","Date","fecha_creacion","toLocaleDateString","Button","onClick","window","confirm","delete","concat","userId","success","_error$response","_error$response$data","message","handleDelete","color","offers","setOffers","fetchOffers","offer","titulo","nombre_ofertante","ubicacion","puesto","fecha_publicacion","offerId","activeTab","setActiveTab","Box","mb","Tabs","value","onChange","handleTabChange","event","newValue","Tab","label","UserManagement","OfferManagement"],"sourceRoot":""}